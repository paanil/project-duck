
#ifndef h_ROB_KEYBOARD_H
#define h_ROB_KEYBOARD_H

#include "../Types.h"
#include <SDL2/SDL_keycode.h>
#include <SDL2/SDL_scancode.h>

namespace rob
{

    enum class KeyMod : uint32_t
    {
        None = KMOD_NONE,
        LShift = KMOD_LSHIFT,
        RShift = KMOD_RSHIFT,
        Shift = LShift | RShift,
        LCtrl = KMOD_LCTRL,
        RCtrl = KMOD_RCTRL,
        Ctrl = LCtrl | RCtrl,
        LAlt = KMOD_LALT,
        RAlt = KMOD_RALT,
        Alt = LAlt | RAlt,
        LGui = KMOD_LGUI,
        RGui = KMOD_RGUI,
        Gui = LGui | RGui,
        Num = KMOD_NUM,
        Caps = KMOD_CAPS,
        Mode = KMOD_MODE
    };

    inline uint32_t operator & (uint32_t keymods, KeyMod mod)
    { return keymods & static_cast<uint32_t>(mod); }

    struct Keyboard
    {
        enum class Key : uint32_t;
        enum class Scancode : uint32_t;
    };

    enum class Keyboard::Key : uint32_t
    {
        Unknown = SDLK_UNKNOWN,

        Return = SDLK_RETURN,
        Escape = SDLK_ESCAPE,
        Backspace = SDLK_BACKSPACE,
        Tab = SDLK_TAB,
        Space = SDLK_SPACE,
        Exclaim = SDLK_EXCLAIM,
        QuoteDbl = SDLK_QUOTEDBL,
        Hash = SDLK_HASH,
        Percent = SDLK_PERCENT,
        Dollar = SDLK_DOLLAR,
        Ampersand = SDLK_AMPERSAND,
        Quote = SDLK_QUOTE,
        LParen = SDLK_LEFTPAREN,
        RParen = SDLK_RIGHTPAREN,
        Asterisk = SDLK_ASTERISK,
        Plus = SDLK_PLUS,
        Comma = SDLK_COMMA,
        Minus = SDLK_MINUS,
        Period = SDLK_PERIOD,
        Slash = SDLK_SLASH,
        Num0 = SDLK_0,
        Num1 = SDLK_1,
        Num2 = SDLK_2,
        Num3 = SDLK_3,
        Num4 = SDLK_4,
        Num5 = SDLK_5,
        Num6 = SDLK_6,
        Num7 = SDLK_7,
        Num8 = SDLK_8,
        Num9 = SDLK_9,
        Colon = SDLK_COLON,
        Semicolon = SDLK_SEMICOLON,
        Less = SDLK_LESS,
        Equals = SDLK_EQUALS,
        Greater = SDLK_GREATER,
        Question = SDLK_QUESTION,
        At = SDLK_AT,
        /*
           Skip uppercase letters
         */
        LBracket = SDLK_LEFTBRACKET,
        Backslash = SDLK_BACKSLASH,
        RBracket = SDLK_RIGHTBRACKET,
        Caret = SDLK_CARET,
        Underscore = SDLK_UNDERSCORE,
        BackQuote = SDLK_BACKQUOTE,
        A = SDLK_a,
        B = SDLK_b,
        C = SDLK_c,
        D = SDLK_d,
        E = SDLK_e,
        F = SDLK_f,
        G = SDLK_g,
        H = SDLK_h,
        I = SDLK_i,
        J = SDLK_j,
        K = SDLK_k,
        L = SDLK_l,
        M = SDLK_m,
        N = SDLK_n,
        O = SDLK_o,
        P = SDLK_p,
        Q = SDLK_q,
        R = SDLK_r,
        S = SDLK_s,
        T = SDLK_t,
        U = SDLK_u,
        V = SDLK_v,
        W = SDLK_w,
        X = SDLK_x,
        Y = SDLK_y,
        Z = SDLK_z,

        CapsLock = SDLK_CAPSLOCK,

        F1 = SDLK_F1,
        F2 = SDLK_F2,
        F3 = SDLK_F3,
        F4 = SDLK_F4,
        F5 = SDLK_F5,
        F6 = SDLK_F6,
        F7 = SDLK_F7,
        F8 = SDLK_F8,
        F9 = SDLK_F9,
        F10 = SDLK_F10,
        F11 = SDLK_F11,
        F12 = SDLK_F12,

        PrintScreen = SDLK_PRINTSCREEN,
        ScrollLock = SDLK_SCROLLLOCK,
        Pause = SDLK_PAUSE,
        Insert = SDLK_INSERT,
        Home = SDLK_HOME,
        PageUp = SDLK_PAGEUP,
        Delete = SDLK_DELETE,
        End = SDLK_END,
        PageDown = SDLK_PAGEDOWN,
        Right = SDLK_RIGHT,
        Left = SDLK_LEFT,
        Down = SDLK_DOWN,
        Up = SDLK_UP,

        NumLockClear = SDLK_NUMLOCKCLEAR,
        Kp_Divide = SDLK_KP_DIVIDE,
        Kp_Multiply = SDLK_KP_MULTIPLY,
        Kp_Minus = SDLK_KP_MINUS,
        Kp_Plus = SDLK_KP_PLUS,
        Kp_Enter = SDLK_KP_ENTER,
        Kp_1 = SDLK_KP_1,
        Kp_2 = SDLK_KP_2,
        Kp_3 = SDLK_KP_3,
        Kp_4 = SDLK_KP_4,
        Kp_5 = SDLK_KP_5,
        Kp_6 = SDLK_KP_6,
        Kp_7 = SDLK_KP_7,
        Kp_8 = SDLK_KP_8,
        Kp_9 = SDLK_KP_9,
        Kp_0 = SDLK_KP_0,
        Kp_Period = SDLK_KP_PERIOD,

        App = SDLK_APPLICATION,
        POwer = SDLK_POWER,
        Kp_Equals = SDLK_KP_EQUALS,
        F13 = SDLK_F13,
        F14 = SDLK_F14,
        F15 = SDLK_F15,
        F16 = SDLK_F16,
        F17 = SDLK_F17,
        F18 = SDLK_F18,
        F19 = SDLK_F19,
        F20 = SDLK_F20,
        F21 = SDLK_F21,
        F22 = SDLK_F22,
        F23 = SDLK_F23,
        F24 = SDLK_F24,
        Execute = SDLK_EXECUTE,
        Help = SDLK_HELP,
        Menu = SDLK_MENU,
        Select = SDLK_SELECT,
        Stop = SDLK_STOP,
        Again = SDLK_AGAIN,
        Undo = SDLK_UNDO,
        Cut = SDLK_CUT,
        Copy = SDLK_COPY,
        Paste = SDLK_PASTE,
        Find = SDLK_FIND,
        Mute = SDLK_MUTE,
        VolumeUp = SDLK_VOLUMEUP,
        VolumeDown = SDLK_VOLUMEDOWN,
        Kp_Comma = SDLK_KP_COMMA,
        Kp_EqualsAs400 = SDLK_KP_EQUALSAS400,

        AltErase = SDLK_ALTERASE,
        SysReq = SDLK_SYSREQ,
        Cancel = SDLK_CANCEL,
        Clear = SDLK_CLEAR,
        Prior = SDLK_PRIOR,
        Return2 = SDLK_RETURN2,
        Separator = SDLK_SEPARATOR,
        Out = SDLK_OUT,
        Oper = SDLK_OPER,
        ClearAgain = SDLK_CLEARAGAIN,
        CrSel = SDLK_CRSEL,
        ExSel = SDLK_EXSEL,

        Kp_00 = SDLK_KP_00,
        Kp_000 = SDLK_KP_000,
        ThousandSep = SDLK_THOUSANDSSEPARATOR,
        DecimalSep = SDLK_DECIMALSEPARATOR,
        CurrencyUnit = SDLK_CURRENCYUNIT,
        CurrencySubUnit = SDLK_CURRENCYSUBUNIT,
        Kp_LParen = SDLK_KP_LEFTPAREN,
        Kp_RParen = SDLK_KP_RIGHTPAREN,
        Kp_LBrace = SDLK_KP_LEFTBRACE,
        Kp_RBrace = SDLK_KP_RIGHTBRACE,
        Kp_Tab = SDLK_KP_TAB,
        Kp_Backspace = SDLK_KP_BACKSPACE,
        Kp_A = SDLK_KP_A,
        Kp_B = SDLK_KP_B,
        Kp_C = SDLK_KP_C,
        Kp_D = SDLK_KP_D,
        Kp_E = SDLK_KP_E,
        Kp_F = SDLK_KP_F,
        Kp_Xor = SDLK_KP_XOR,
        Kp_Power = SDLK_KP_POWER,
        Kp_Percent = SDLK_KP_PERCENT,
        Kp_Less = SDLK_KP_LESS,
        Kp_Greater = SDLK_KP_GREATER,
        Kp_Ampersand = SDLK_KP_AMPERSAND,
        Kp_DblAmpersand = SDLK_KP_DBLAMPERSAND,
        Kp_VerticalBar = SDLK_KP_VERTICALBAR,
        Kp_DblVerticalBar = SDLK_KP_DBLVERTICALBAR,
        Kp_Colon = SDLK_KP_COLON,
        Kp_Hash = SDLK_KP_HASH,
        Kp_Space = SDLK_KP_SPACE,
        Kp_At = SDLK_KP_AT,
        Kp_Exclam = SDLK_KP_EXCLAM,
        Kp_MemStore = SDLK_KP_MEMSTORE,
        Kp_MemRecall = SDLK_KP_MEMRECALL,
        Kp_MemClear = SDLK_KP_MEMCLEAR,
        Kp_MemAdd = SDLK_KP_MEMADD,
        Kp_MemSubtract = SDLK_KP_MEMSUBTRACT,
        Kp_MemMultiply = SDLK_KP_MEMMULTIPLY,
        Kp_MemDivide = SDLK_KP_MEMDIVIDE,
        Kp_PlusMinus = SDLK_KP_PLUSMINUS,
        Kp_Clear = SDLK_KP_CLEAR,
        Kp_ClearEntry = SDLK_KP_CLEARENTRY,
        Kp_Binary = SDLK_KP_BINARY,
        Kp_Octal = SDLK_KP_OCTAL,
        Kp_Decimal = SDLK_KP_DECIMAL,
        Kp_Hexadecimal = SDLK_KP_HEXADECIMAL,

        LCtrl = SDLK_LCTRL,
        LShift = SDLK_LSHIFT,
        LAlt = SDLK_LALT,
        LGui = SDLK_LGUI,
        RCtrl = SDLK_RCTRL,
        RShift = SDLK_RSHIFT,
        RAlt = SDLK_RALT,
        RGui = SDLK_RGUI,

        Mode = SDLK_MODE,

        AudioNext = SDLK_AUDIONEXT,
        AudioPrev = SDLK_AUDIOPREV,
        AudioStop = SDLK_AUDIOSTOP,
        AudioPlay = SDLK_AUDIOPLAY,
        AudioMute = SDLK_AUDIOMUTE,
        MediaSelect = SDLK_MEDIASELECT,
        WWW = SDLK_WWW,
        Mail = SDLK_MAIL,
        Calculator = SDLK_CALCULATOR,
        Computer = SDLK_COMPUTER,
        Ac_Search = SDLK_AC_SEARCH,
        Ac_Home = SDLK_AC_HOME,
        Ac_Back = SDLK_AC_BACK,
        Ac_Forward = SDLK_AC_FORWARD,
        Ac_Stop = SDLK_AC_STOP,
        Ac_Refresh = SDLK_AC_REFRESH,
        Ac_Boockmarks = SDLK_AC_BOOKMARKS,

        BrightnessDown = SDLK_BRIGHTNESSDOWN,
        BrightnessUp = SDLK_BRIGHTNESSUP,
        DisplaySwitch = SDLK_DISPLAYSWITCH,
        KbIllumToggle = SDLK_KBDILLUMTOGGLE,
        KbIllumDown = SDLK_KBDILLUMDOWN,
        KbIllumUp = SDLK_KBDILLUMUP,
        Eject = SDLK_EJECT,
        Sleep = SDLK_SLEEP,

        NUM_KEYS
    };

    enum class Keyboard::Scancode : uint32_t
    {
        Unknown = SDL_SCANCODE_UNKNOWN,

        A = SDL_SCANCODE_A,
        B = SDL_SCANCODE_B,
        C = SDL_SCANCODE_C,
        D = SDL_SCANCODE_D,
        E = SDL_SCANCODE_E,
        F = SDL_SCANCODE_F,
        G = SDL_SCANCODE_G,
        H = SDL_SCANCODE_H,
        I = SDL_SCANCODE_I,
        J = SDL_SCANCODE_J,
        K = SDL_SCANCODE_K,
        L = SDL_SCANCODE_L,
        M = SDL_SCANCODE_M,
        N = SDL_SCANCODE_N,
        O = SDL_SCANCODE_O,
        P = SDL_SCANCODE_P,
        Q = SDL_SCANCODE_Q,
        R = SDL_SCANCODE_R,
        S = SDL_SCANCODE_S,
        T = SDL_SCANCODE_T,
        U = SDL_SCANCODE_U,
        V = SDL_SCANCODE_V,
        W = SDL_SCANCODE_W,
        X = SDL_SCANCODE_X,
        Y = SDL_SCANCODE_Y,
        Z = SDL_SCANCODE_Z,

        Num1 = SDL_SCANCODE_1,
        Num2 = SDL_SCANCODE_2,
        Num3 = SDL_SCANCODE_3,
        Num4 = SDL_SCANCODE_4,
        Num5 = SDL_SCANCODE_5,
        Num6 = SDL_SCANCODE_6,
        Num7 = SDL_SCANCODE_7,
        Num8 = SDL_SCANCODE_8,
        Num9 = SDL_SCANCODE_9,
        Num0 = SDL_SCANCODE_0,

        Return      = SDL_SCANCODE_RETURN,
        Escape      = SDL_SCANCODE_ESCAPE,
        Backspace   = SDL_SCANCODE_BACKSPACE,
        Tab         = SDL_SCANCODE_TAB,
        Space       = SDL_SCANCODE_SPACE,

        Minus       = SDL_SCANCODE_MINUS,
        Equals      = SDL_SCANCODE_EQUALS,
        LBracet     = SDL_SCANCODE_LEFTBRACKET,
        RBracket    = SDL_SCANCODE_RIGHTBRACKET,
        Backslash   = SDL_SCANCODE_BACKSLASH,

        NonUS_Hash  = SDL_SCANCODE_NONUSHASH,
        Semicolon   = SDL_SCANCODE_SEMICOLON,
        Apostrophe  = SDL_SCANCODE_APOSTROPHE,
        Grave       = SDL_SCANCODE_GRAVE,
        Comma       = SDL_SCANCODE_COMMA,
        Period      = SDL_SCANCODE_PERIOD,
        Slash       = SDL_SCANCODE_SLASH,

        CapsLock    = SDL_SCANCODE_CAPSLOCK,

        F1 = SDL_SCANCODE_F1,
        F2 = SDL_SCANCODE_F2,
        F3 = SDL_SCANCODE_F3,
        F4 = SDL_SCANCODE_F4,
        F5 = SDL_SCANCODE_F5,
        F6 = SDL_SCANCODE_F6,
        F7 = SDL_SCANCODE_F7,
        F8 = SDL_SCANCODE_F8,
        F9 = SDL_SCANCODE_F9,
        F10 = SDL_SCANCODE_F10,
        F11 = SDL_SCANCODE_F11,
        F12 = SDL_SCANCODE_F12,

        PrintScreen = SDL_SCANCODE_PRINTSCREEN,
        ScrollLock = SDL_SCANCODE_SCROLLLOCK,
        Pause = SDL_SCANCODE_PAUSE,

        Insert = SDL_SCANCODE_INSERT,
        Home = SDL_SCANCODE_HOME,
        PageUp = SDL_SCANCODE_PAGEUP,
        Delete = SDL_SCANCODE_DELETE,
        End = SDL_SCANCODE_END,
        PageDown = SDLK_PAGEDOWN,
        Right = SDL_SCANCODE_RIGHT,
        Left = SDL_SCANCODE_LEFT,
        Down = SDL_SCANCODE_DOWN,
        Up = SDL_SCANCODE_UP,

        NumLockClear = SDL_SCANCODE_NUMLOCKCLEAR,
        Kp_Divide = SDL_SCANCODE_KP_DIVIDE,
        Kp_Multiply = SDL_SCANCODE_KP_MULTIPLY,
        Kp_Minus = SDL_SCANCODE_KP_MINUS,
        Kp_Plus = SDL_SCANCODE_KP_PLUS,
        Kp_Enter = SDL_SCANCODE_KP_ENTER,
        Kp_1 = SDL_SCANCODE_KP_1,
        Kp_2 = SDL_SCANCODE_KP_2,
        Kp_3 = SDL_SCANCODE_KP_3,
        Kp_4 = SDL_SCANCODE_KP_4,
        Kp_5 = SDL_SCANCODE_KP_5,
        Kp_6 = SDL_SCANCODE_KP_6,
        Kp_7 = SDL_SCANCODE_KP_7,
        Kp_8 = SDL_SCANCODE_KP_8,
        Kp_9 = SDL_SCANCODE_KP_9,
        Kp_0 = SDL_SCANCODE_KP_0,
        Kp_Period = SDL_SCANCODE_KP_PERIOD,
        Kp_NonUS_Backslash = SDL_SCANCODE_NONUSBACKSLASH,

        App         = SDL_SCANCODE_APPLICATION,
        POwer       = SDL_SCANCODE_POWER,
        Kp_Equals   = SDL_SCANCODE_KP_EQUALS,
        F13 = SDL_SCANCODE_F13,
        F14 = SDL_SCANCODE_F14,
        F15 = SDL_SCANCODE_F15,
        F16 = SDL_SCANCODE_F16,
        F17 = SDL_SCANCODE_F17,
        F18 = SDL_SCANCODE_F18,
        F19 = SDL_SCANCODE_F19,
        F20 = SDL_SCANCODE_F20,
        F21 = SDL_SCANCODE_F21,
        F22 = SDL_SCANCODE_F22,
        F23 = SDL_SCANCODE_F23,
        F24 = SDL_SCANCODE_F24,
        Execute = SDL_SCANCODE_EXECUTE,
        Help    = SDL_SCANCODE_HELP,
        Menu    = SDL_SCANCODE_MENU,
        Select  = SDL_SCANCODE_SELECT,
        Stop    = SDL_SCANCODE_STOP,
        Again   = SDL_SCANCODE_AGAIN,
        Undo    = SDL_SCANCODE_UNDO,
        Cut     = SDL_SCANCODE_CUT,
        Copy    = SDL_SCANCODE_COPY,
        Paste   = SDL_SCANCODE_PASTE,
        Find    = SDL_SCANCODE_FIND,
        Mute    = SDL_SCANCODE_MUTE,
        VolumeUp    = SDL_SCANCODE_VOLUMEUP,
        VolumeDown  = SDL_SCANCODE_VOLUMEDOWN,
        Kp_Comma    = SDL_SCANCODE_KP_COMMA,
        Kp_EqualsAs400 = SDL_SCANCODE_KP_EQUALSAS400,

        AltErase    = SDL_SCANCODE_ALTERASE,
        SysReq      = SDL_SCANCODE_SYSREQ,
        Cancel      = SDL_SCANCODE_CANCEL,
        Clear       = SDL_SCANCODE_CLEAR,
        Prior       = SDL_SCANCODE_PRIOR,
        Return2     = SDL_SCANCODE_RETURN2,
        Separator   = SDL_SCANCODE_SEPARATOR,
        Out         = SDL_SCANCODE_OUT,
        Oper        = SDL_SCANCODE_OPER,
        ClearAgain  = SDL_SCANCODE_CLEARAGAIN,
        CrSel       = SDL_SCANCODE_CRSEL,
        ExSel       = SDL_SCANCODE_EXSEL,

        Kp_00   = SDL_SCANCODE_KP_00,
        Kp_000  = SDL_SCANCODE_KP_000,
        ThousandSep     = SDL_SCANCODE_THOUSANDSSEPARATOR,
        DecimalSep      = SDL_SCANCODE_DECIMALSEPARATOR,
        CurrencyUnit    = SDL_SCANCODE_CURRENCYUNIT,
        CurrencySubUnit = SDL_SCANCODE_CURRENCYSUBUNIT,
        Kp_LParen       = SDL_SCANCODE_KP_LEFTPAREN,
        Kp_RParen       = SDL_SCANCODE_KP_RIGHTPAREN,
        Kp_LBrace       = SDL_SCANCODE_KP_LEFTBRACE,
        Kp_RBrace       = SDL_SCANCODE_KP_RIGHTBRACE,
        Kp_Tab          = SDL_SCANCODE_KP_TAB,
        Kp_Backspace    = SDL_SCANCODE_KP_BACKSPACE,
        Kp_A            = SDL_SCANCODE_KP_A,
        Kp_B            = SDL_SCANCODE_KP_B,
        Kp_C            = SDL_SCANCODE_KP_C,
        Kp_D            = SDL_SCANCODE_KP_D,
        Kp_E            = SDL_SCANCODE_KP_E,
        Kp_F            = SDL_SCANCODE_KP_F,
        Kp_Xor          = SDL_SCANCODE_KP_XOR,
        Kp_Power        = SDL_SCANCODE_KP_POWER,
        Kp_Percent      = SDL_SCANCODE_KP_PERCENT,
        Kp_Less         = SDL_SCANCODE_KP_LESS,
        Kp_Greater      = SDL_SCANCODE_KP_GREATER,
        Kp_Ampersand    = SDL_SCANCODE_KP_AMPERSAND,
        Kp_DblAmpersand = SDL_SCANCODE_KP_DBLAMPERSAND,
        Kp_VerticalBar  = SDL_SCANCODE_KP_VERTICALBAR,
        Kp_DblVerticalBar = SDL_SCANCODE_KP_DBLVERTICALBAR,
        Kp_Colon        = SDL_SCANCODE_KP_COLON,
        Kp_Hash         = SDL_SCANCODE_KP_HASH,
        Kp_Space        = SDL_SCANCODE_KP_SPACE,
        Kp_At           = SDL_SCANCODE_KP_AT,
        Kp_Exclam       = SDL_SCANCODE_KP_EXCLAM,
        Kp_MemStore     = SDL_SCANCODE_KP_MEMSTORE,
        Kp_MemRecall    = SDL_SCANCODE_KP_MEMRECALL,
        Kp_MemClear     = SDL_SCANCODE_KP_MEMCLEAR,
        Kp_MemAdd       = SDL_SCANCODE_KP_MEMADD,
        Kp_MemSubtract  = SDL_SCANCODE_KP_MEMSUBTRACT,
        Kp_MemMultiply  = SDL_SCANCODE_KP_MEMMULTIPLY,
        Kp_MemDivide    = SDL_SCANCODE_KP_MEMDIVIDE,
        Kp_PlusMinus    = SDL_SCANCODE_KP_PLUSMINUS,
        Kp_Clear        = SDL_SCANCODE_KP_CLEAR,
        Kp_ClearEntry   = SDL_SCANCODE_KP_CLEARENTRY,
        Kp_Binary       = SDL_SCANCODE_KP_BINARY,
        Kp_Octal        = SDL_SCANCODE_KP_OCTAL,
        Kp_Decimal      = SDL_SCANCODE_KP_DECIMAL,
        Kp_Hexadecimal  = SDL_SCANCODE_KP_HEXADECIMAL,

        LCtrl   = SDL_SCANCODE_LCTRL,
        LShift  = SDL_SCANCODE_LSHIFT,
        LAlt    = SDL_SCANCODE_LALT,
        LGui    = SDL_SCANCODE_LGUI,
        RCtrl   = SDL_SCANCODE_RCTRL,
        RShift  = SDL_SCANCODE_RSHIFT,
        RAlt    = SDL_SCANCODE_RALT,
        RGui    = SDL_SCANCODE_RGUI,
        Mode    = SDL_SCANCODE_MODE,

        AudioNext   = SDL_SCANCODE_AUDIONEXT,
        AudioPrev   = SDL_SCANCODE_AUDIOPREV,
        AudioStop   = SDL_SCANCODE_AUDIOSTOP,
        AudioPlay   = SDL_SCANCODE_AUDIOPLAY,
        AudioMute   = SDL_SCANCODE_AUDIOMUTE,
        MediaSelect = SDL_SCANCODE_MEDIASELECT,
        WWW         = SDL_SCANCODE_WWW,
        Mail        = SDL_SCANCODE_MAIL,
        Calculator  = SDL_SCANCODE_CALCULATOR,
        Computer    = SDL_SCANCODE_COMPUTER,
        Ac_Search   = SDL_SCANCODE_AC_SEARCH,
        Ac_Home     = SDL_SCANCODE_AC_HOME,
        Ac_Back     = SDL_SCANCODE_AC_BACK,
        Ac_Forward  = SDL_SCANCODE_AC_FORWARD,
        Ac_Stop     = SDL_SCANCODE_AC_STOP,
        Ac_Refresh  = SDL_SCANCODE_AC_REFRESH,
        Ac_Boockmarks = SDL_SCANCODE_AC_BOOKMARKS,

        BrightnessDown  = SDL_SCANCODE_BRIGHTNESSDOWN,
        BrightnessUp    = SDL_SCANCODE_BRIGHTNESSUP,
        DisplaySwitch   = SDL_SCANCODE_DISPLAYSWITCH,
        KbIllumToggle   = SDL_SCANCODE_KBDILLUMTOGGLE,
        KbIllumDown     = SDL_SCANCODE_KBDILLUMDOWN,
        KbIllumUp       = SDL_SCANCODE_KBDILLUMUP,
        Eject           = SDL_SCANCODE_EJECT,
        Sleep           = SDL_SCANCODE_SLEEP,

        App1 = SDL_SCANCODE_APP1,
        App2 = SDL_SCANCODE_APP2,

        NUM_KEYS
    };

    const char* GetKeyName(Keyboard::Key key);
    const char* GetScancodeName(Keyboard::Scancode key);

} // rob

#endif // h_ROB_KEYBOARD_H

